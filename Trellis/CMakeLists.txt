cmake_minimum_required(VERSION 3.10)
project(Trellis)

set(CMAKE_CXX_STANDARD 17)

find_package(asio REQUIRED)
find_package(glm REQUIRED)
find_package(glfw3 3.3 REQUIRED)
find_package(glad CONFIG REQUIRED)
find_package(freetype CONFIG REQUIRED)
find_package(nlohmann_json CONFIG REQUIRED)
find_package(SQLite3 CONFIG REQUIRED)

include_directories(include include/imgui include/stb_image ${SQLITE3_INCLUDE_DIRS})

file(GLOB_RECURSE SRC "src/*.cpp")

add_executable(Trellis ${SRC})

target_link_libraries(Trellis glad::glad)
target_link_libraries(Trellis glm)
target_link_libraries(Trellis glfw)
target_link_libraries(Trellis freetype)
target_link_libraries(Trellis asio)
target_link_libraries(Trellis nlohmann_json)
target_link_libraries(Trellis sqlite3)

if (MINGW)
    target_link_libraries(Trellis ws2_32)
    target_link_libraries(Trellis wsock32)
    option(MINGW_STDTHREADS_GENERATE_STDHEADERS "" ON)
    add_subdirectory(mingw_stdthreads)
    target_link_libraries(Trellis mingw_stdthreads)
endif ()
if (MSVC)
    target_compile_options(Trellis PRIVATE)
    add_definitions(-D_WIN32_WINNT=0x601 -D_CRT_SECURE_NO_WARNINGS)
else ()
    target_compile_options(Trellis PRIVATE -Wall -Wextra -pedantic)
endif ()